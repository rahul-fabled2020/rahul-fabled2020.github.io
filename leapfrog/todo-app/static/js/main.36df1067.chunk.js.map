{"version":3,"sources":["redux/actions/apiActions.js","redux/reducers/apiReducer.js","redux/actions/todoActions.js","redux/reducers/todoReducer.js","redux/reducers/index.js","redux/store.js","configs/api.js","utils/http.js","components/Tab.jsx","components/Tabs.jsx","utils/cookie.js","components/Todo.jsx","components/TodoList.jsx","components/VisibleTodoList.jsx","components/Header.jsx","App.js","components/Error.jsx","components/EditTodo.jsx","components/TodoForm.jsx","components/LoginPage.jsx","components/RegisterPage.jsx","routers/AppRouter.js","serviceWorker.js","index.js"],"names":["storeToken","token","type","payload","storeUser","user","INITIAL_STATE","apiReducer","state","action","visibilityFilters","list","visibility","todoActions","todoReducer","id","title","description","isCompleted","map","todo","filter","reducer","combineReducers","api","todos","store","createStore","BASE_URL","get","url","fetch","headers","authorization","then","res","json","catch","err","post","data","method","cache","Authorization","body","JSON","stringify","put","destroy","Tab","onClick","props","label","this","activeTab","className","React","Component","Tabs","onClickTabItem","tab","setState","children","child","key","connect","dispatch","setVisibilityFilter","setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","getCookie","name","ca","split","i","length","c","charAt","substring","indexOf","http","iscompleted","CookieManager","onDelete","error","deleteTodo","e","checked","window","confirm","to","pathname","TodoList","toggleTodo","getVisibleTodos","Error","history","push","firstname","lastname","App","parse","storeTodos","code","console","log","LABELS","VisibleTodoList","message","EditTodo","onSubmit","preventDefault","target","value","trim","location","editTodo","undefined","htmlFor","defaultValue","required","TodoForm","addTodo","apiActions","useState","setError","username","password","placeholder","RegisterPage","email","DefaultPage","AppRouter","basename","path","component","exact","LoginPage","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36df1067.chunk.js","sourcesContent":["export const STORE_TOKEN = 'STORE_TOKEN';\r\nexport const STORE_USER = 'STORE_USER';\r\n\r\nexport const storeToken = token => ({\r\n  type: STORE_TOKEN,\r\n  payload: token\r\n});\r\n\r\nexport const storeUser = user => ({\r\n  type: STORE_USER,\r\n  payload: user\r\n});","import * as apiActions from './../actions/apiActions';\r\n\r\nconst INITIAL_STATE = {\r\n  user: {},\r\n  token: \"\"\r\n};\r\n\r\nfunction apiReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case apiActions.STORE_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.payload\r\n      };\r\n\r\n    case apiActions.STORE_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default apiReducer;\r\n","export const ADD_TODO = 'ADD_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const STORE_TODOS = 'STORE_TODOS';\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\r\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER';\r\n\r\nexport const addTodo = (todo) => ({\r\n  type: ADD_TODO,\r\n  payload: todo\r\n});\r\n\r\nexport const editTodo = (todo) => ({\r\n  type: EDIT_TODO,\r\n  payload: todo\r\n});\r\n\r\nexport const deleteTodo = (id) => ({\r\n  type: DELETE_TODO,\r\n  payload: id\r\n});\r\n\r\nexport const storeTodos = (todos) => ({\r\n  type: STORE_TODOS,\r\n  payload: todos\r\n});\r\n\r\nexport const setVisibilityFilter = (filter) => ({\r\n  type: SET_VISIBILITY_FILTER,\r\n  payload: filter\r\n});\r\n\r\nexport const toggleTodo = (id) => ({\r\n  type: TOGGLE_TODO,\r\n  payload: id\r\n});\r\n\r\nexport const visibilityFilters = {\r\n  SHOW_ALL: 'SHOW_ALL',\r\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n};\r\n","import * as todoActions from '../actions/todoActions';\r\n\r\nconst INITIAL_STATE = { list: [], visibility: todoActions.visibilityFilters.SHOW_ALL };\r\n\r\nfunction todoReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case todoActions.ADD_TODO:\r\n      return {\r\n        ...state,\r\n        list: [\r\n          ...state.list,\r\n          {\r\n            id: action.payload.id,\r\n            title: action.payload.title,\r\n            description: action.payload.description,\r\n            isCompleted: false\r\n          }\r\n        ]\r\n      };\r\n\r\n    case todoActions.EDIT_TODO:\r\n      return {\r\n        ...state,\r\n        list: state.list.map((todo) => {\r\n          return todo.id === action.payload.id ? action.payload : todo;\r\n        })\r\n      };\r\n\r\n    case todoActions.DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((todo) => todo.id !== action.payload)\r\n      };\r\n\r\n    case todoActions.STORE_TODOS:\r\n      return {\r\n        ...state,\r\n        list: [...action.payload]\r\n      };\r\n\r\n    case todoActions.TOGGLE_TODO:\r\n      return {\r\n        ...state,\r\n        list: state.list.map((todo) =>\r\n          todo.id === action.payload ? { ...todo, isCompleted: !todo.isCompleted } : todo\r\n        )\r\n      };\r\n\r\n    case todoActions.SET_VISIBILITY_FILTER:\r\n      return { ...state, visibility: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default todoReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport apiReducer from './apiReducer';\r\nimport todoReducer from './todoReducer';\r\n\r\nconst reducer = combineReducers({\r\n  api: apiReducer,\r\n  todos: todoReducer\r\n});\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\n\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(\r\n  reducer\r\n);\r\n\r\nexport default store;","export const BASE_URL = 'https://todosapi1.herokuapp.com/api';\r\n// export const BASE_URL = 'http://localhost:5000/api';","import { BASE_URL } from \"../configs/api\";\r\n\r\nfunction get(url, token) {\r\n  return fetch(`${BASE_URL}${url}`, {\r\n    headers: {\r\n      authorization: token\r\n    }\r\n  })\r\n    .then((res) => res.json())\r\n    .catch((err) => err);\r\n}\r\n\r\nfunction post(url, data, token) {\r\n  return fetch(`${BASE_URL}${url}`, {\r\n    method: 'POST',\r\n    cache: 'no-cache',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: token\r\n    },\r\n    body: JSON.stringify(data)\r\n  })\r\n    .then((res) => res.json())\r\n    .catch((err) => err);\r\n}\r\n\r\nfunction put(url, data, token) {\r\n  return fetch(`${BASE_URL}${url}`, {\r\n    method: 'PUT',\r\n    cache: 'no-cache',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: token\r\n    },\r\n    body: JSON.stringify(data)\r\n  })\r\n    .then((res) => res.json())\r\n    .catch((err) => err);\r\n}\r\n\r\nfunction destroy(url, token) {\r\n  return fetch(`${BASE_URL}${url}`, {\r\n    method: 'DELETE',\r\n    cache: 'no-cache',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: token\r\n    }\r\n  })\r\n    .then((res) => res.json())\r\n    .catch((err) => err);\r\n}\r\n\r\nexport default { get, post, put, destroy };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Tab extends React.Component {\r\n  static propTypes = {\r\n    activeTab: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  onClick = () => {\r\n    const { label, onClick } = this.props;\r\n    onClick(label);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onClick,\r\n      props: {\r\n        activeTab,\r\n        label,\r\n      },\r\n    } = this;\r\n    \r\n    let className = 'tabs__list-item';\r\n\r\n    if(activeTab === label) {\r\n      className += ' tabs__list--active'\r\n    }\r\n\r\n    return (\r\n      <li\r\n        className = {className}\r\n        onClick = {onClick}\r\n      >\r\n        {label}\r\n      </li>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tab from './Tab';\nimport { connect } from 'react-redux';\nimport { setVisibilityFilter, visibilityFilters } from '../redux/actions/todoActions';\n\nclass Tabs extends React.Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired,\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.children[0].props.label,\n    };\n  }\n\n  onClickTabItem = (tab) => {\n    const filter = tab===\"Active\"? visibilityFilters.SHOW_ACTIVE: tab===\"Completed\"? visibilityFilters.SHOW_COMPLETED: visibilityFilters.SHOW_ALL;\n    this.props.onClick(filter);\n    \n    this.setState(() => ({ activeTab: tab }));\n  }\n\n  render() {\n    const {\n      onClickTabItem,\n      props: {\n        children,\n      },\n      state: {\n        activeTab,\n      }\n    } = this;\n\n    return (\n      <div className=\"tabs\">\n        <ul className=\"tabs__list\">\n          {children.map((child) => {\n            const { label } = child.props;\n\n            return (\n              <Tab\n                activeTab = {activeTab}\n                key = {label}\n                label={label}\n                onClick = {onClickTabItem}\n              />\n            );\n          })}\n        </ul>\n        <div className=\"tabs__content\">\n          {children.map((child)=>{\n            if(child.props.label !== activeTab) return undefined;\n            return child.props.children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  filter: state.todos.visibility\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClick: (filter) => dispatch(setVisibilityFilter(filter))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tabs);","function setCookie(cname, cvalue, exdays) {\r\n  var d = new Date();\r\n  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\r\n  var expires = 'expires=' + d.toUTCString();\r\n  document.cookie = cname + '=' + cvalue + ';' + expires + ';path=/';\r\n}\r\n\r\nfunction getCookie(cname) {\r\n  var name = cname + '=';\r\n  var ca = document.cookie.split(';');\r\n  for (var i = 0; i < ca.length; i++) {\r\n    var c = ca[i];\r\n    while (c.charAt(0) === ' ') {\r\n      c = c.substring(1);\r\n    }\r\n    if (c.indexOf(name) === 0) {\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n  return '';\r\n}\r\n\r\nexport default {\r\n  setCookie,\r\n  getCookie\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport http from '../utils/http';\r\nimport CookieManager from '../utils/cookie';\r\nimport { deleteTodo } from '../redux/actions/todoActions';\r\n\r\nconst Todo = (props) => {\r\n  return (\r\n    <li className=\"todo__item\">\r\n      {props.title && (\r\n        <div className=\"card\">\r\n          <h1 onClick={(e) => onClick(props)} className={`card__heading${props.isCompleted ? ' line-through' : ''}`}>\r\n            <input type=\"checkbox\" name=\"status\" checked={props.isCompleted} />\r\n            {\" \"+props.title}\r\n          </h1>\r\n          <div onClick={(e) => onClick(props)} className={`card__body${props.isCompleted ? ' line-through' : ''}`}>\r\n            {props.description}\r\n          </div>\r\n          <div className=\"card__footer\">\r\n            <div className=\"card__buttons\">\r\n              <button\r\n                className=\"btn btn--secondary\"\r\n                onClick={(e) => window.confirm(`Are you sure to delete ${props.title}?`) && onDelete(props)}\r\n              >\r\n                Delete\r\n              </button>\r\n              <Link\r\n                to={{\r\n                  pathname: '/edit',\r\n                  state: {\r\n                    id: props.id,\r\n                    title: props.title,\r\n                    description: props.description,\r\n                    isCompleted: props.isCompleted\r\n                  }\r\n                }}\r\n                className=\"btn btn--primary\"\r\n              >\r\n                Edit\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nconst onClick = (props) => {\r\n  http.put(\r\n    `/todos/${props.id}`,\r\n    {\r\n      title: props.title,\r\n      description: props.description,\r\n      iscompleted: `${!props.isCompleted}`\r\n    },\r\n    CookieManager.getCookie('token')\r\n  ).then(res=>{\r\n    if(res.data) {\r\n      props.onClick();\r\n    }\r\n  });\r\n};\r\n\r\nconst onDelete = (props) => {\r\n  http\r\n    .destroy(`/todos/${props.id}`, CookieManager.getCookie('token'))\r\n    .then((res) => {\r\n      if (!res.error) {\r\n        props.deleteTodo(props.id);\r\n      }\r\n    })\r\n    .catch((err) => err);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteTodo: (id) => dispatch(deleteTodo(id))\r\n  };\r\n};\r\n\r\nTodo.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  isCompleted: PropTypes.bool.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Todo from './Todo';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TodoList = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Link to=\"/add\" className=\"btn btn--primary\">Add Todo</Link>\r\n      {props.todos.length === 0 && <div className=\"todo__empty-message\">You don't have any tasks yet. Create a new one.</div>}\r\n      <ul className=\"todo\">\r\n        {props.todos.map((todo) => (\r\n          <Todo key={todo.id} {...todo} onClick={() => props.toggleTodo(todo.id)} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      isCompleted: PropTypes.bool.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      description: PropTypes.string.isRequired\r\n    }).isRequired\r\n  ).isRequired,\r\n  toggleTodo: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TodoList;\r\n","import { connect } from 'react-redux';\r\n\r\nimport TodoList from './TodoList';\r\nimport { visibilityFilters, toggleTodo } from '../redux/actions/todoActions';\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n  switch (filter) {\r\n    case visibilityFilters.SHOW_ALL:\r\n      return todos;\r\n    case visibilityFilters.SHOW_COMPLETED:\r\n      return todos.filter((todo) => todo.isCompleted);\r\n    case visibilityFilters.SHOW_ACTIVE:\r\n      return todos.filter((todo) => !todo.isCompleted);\r\n    default:\r\n      throw new Error('Unknown filter: ' + filter);\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  todos: getVisibleTodos(state.todos.list, state.todos.visibility)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleTodo: (id) => dispatch(toggleTodo(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CookieManager from '../utils/cookie';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"container\">\r\n        <h1 className=\"header__heading\"><Link to=\"/\" className=\"header__link\">To do App</Link></h1>\r\n        {props.api.token && (\r\n          <div className=\"header__user-wrapper\">\r\n            <button className=\"btn btn--secondary header__btn\" onClick={(e) => onClick(props)}>\r\n              Log Out\r\n            </button>\r\n            <div className=\"header__user-info\">{props.api.user.firstname + ' ' + props.api.user.lastname}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction onClick(props) {\r\n  const expiryDays = 0;\r\n  CookieManager.setCookie('token', '', expiryDays);\r\n  props.history.push('/login');\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { ...state };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport http from './utils/http';\nimport Tabs from './components/Tabs';\nimport CookieManager from './utils/cookie';\nimport { storeTodos } from './redux/actions/todoActions';\nimport VisibleTodoList from './components/VisibleTodoList';\nimport { storeToken, storeUser } from './redux/actions/apiActions';\nimport Header from './components/Header';\n\nclass App extends Component {\n  componentDidMount() {\n    const token = CookieManager.getCookie(\"token\");\n\n    if(token) {\n      const user = JSON.parse(CookieManager.getCookie(\"user\"));\n\n      this.props.storeToken(token);\n      this.props.storeUser(user);\n    } else {\n      this.props.history.push('/login');\n    }\n\n    if (token) {\n      http\n        .get('/todos', token)\n        .then((todos) => {\n          if (todos.data) {\n            this.props.storeTodos(todos.data);\n          } else {\n            //error\n            todos.error.code === 500 && this.props.storeTodos([]);\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n\n  render() {\n    const LABELS = { all: 'All', active: 'Active', completed: 'Completed' };\n\n    return (\n      <div>\n        <Header {...this.props} />\n        <Tabs>\n          <div label={LABELS.all}>\n            <VisibleTodoList />\n          </div>\n\n          <div label={LABELS.active}>\n            <VisibleTodoList />\n          </div>\n\n          <div label={LABELS.completed}>\n            <VisibleTodoList />\n          </div>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { token: state.api.token };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    storeTodos: (todos) => dispatch(storeTodos(todos)),\n    storeToken: (token) => dispatch(storeToken(token)),\n    storeUser: (user) => dispatch(storeUser(user))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\r\n\r\nfunction Error(props) {\r\n  return (\r\n    props.message ? <div className=\"error\">Error: {props.message}</div>: null\r\n  );\r\n}\r\n\r\nexport default Error;","import React, { Fragment } from 'react';\r\nimport { editTodo } from '../redux/actions/todoActions';\r\nimport { connect } from 'react-redux';\r\nimport http from '../utils/http';\r\nimport Error from './Error';\r\nimport Header from './Header';\r\n\r\nclass EditTodo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: undefined\r\n    };\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const title = e.target.title.value.trim();\r\n    const description = e.target.description.value.trim();\r\n    const iscompleted = `${this.props.location.state.isCompleted}`;\r\n\r\n    const todo = { title, description, iscompleted };\r\n\r\n    e.target.title.value = '';\r\n    e.target.description.value = '';\r\n\r\n    http\r\n      .put(`/todos/${this.props.location.state.id}`, todo, this.props.token)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          this.props.editTodo(res.data);\r\n          this.props.history.push('/');\r\n        } else {\r\n          console.log(res.error);\r\n          this.setState(() => ({ error: res.error.message }));\r\n        }\r\n      })\r\n      .catch((err) => this.setState(() => ({ error: err.message })));\r\n  };\r\n\r\n  render() {\r\n    const { title, description } = this.props.location.state;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Header {...this.props} />\r\n        {this.state.error && <Error message={this.state.error} />}\r\n        <form onSubmit={this.onSubmit} className=\"form todo__form\">\r\n          <h1 className=\"todo__heading\">Edit Todo</h1>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" name=\"title\" className=\"form__input\" defaultValue={title} required />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"description\">Description</label>\r\n            <textarea name=\"description\" className=\"form__textarea\" defaultValue={description} required></textarea>\r\n          </div>\r\n\r\n          <button className=\"btn btn--primary form__btn\">Edit</button>\r\n        </form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.api.token\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    editTodo: (todo) => dispatch(editTodo(todo))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTodo);\r\n","import React, { Fragment } from 'react';\r\nimport { addTodo } from '../redux/actions/todoActions';\r\nimport { connect } from 'react-redux';\r\nimport http from '../utils/http';\r\nimport Error from './Error';\r\nimport Header from './Header';\r\n\r\nclass TodoForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: undefined\r\n    };\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const title = e.target.title.value.trim();\r\n    const description = e.target.description.value.trim();\r\n    const iscompleted = 'false';\r\n\r\n    const todo = { title, description, iscompleted };\r\n\r\n    e.target.title.value = '';\r\n    e.target.description.value = '';\r\n\r\n    http\r\n      .post('/todos', todo, this.props.token)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          console.log(res.data);\r\n          this.props.addTodo(res.data);\r\n          this.props.history.push('/');\r\n        } else {\r\n          console.log(res.error);\r\n          this.setState(() => ({ error: res.error.message }));\r\n        }\r\n      })\r\n      .catch((err) => this.setState(() => ({ error: err.message })));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Header {...this.props} />\r\n        {this.state.error && <Error message={this.state.error} />}\r\n        <form onSubmit={this.onSubmit} className=\"form todo__form\">\r\n          <h1 className=\"todo__heading\">Add Todo</h1>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" name=\"title\" className=\"form__input\" required />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"description\">Description</label>\r\n            <textarea name=\"description\" className=\"form__textarea\" required></textarea>\r\n          </div>\r\n\r\n          <button className=\"btn btn--primary form__btn\">Add</button>\r\n        </form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.api.token\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTodo: (todo) => dispatch(addTodo(todo))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoForm);\r\n","import { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\n\r\nimport Error from './Error';\r\nimport http from '../utils/http';\r\nimport CookieManager from '../utils/cookie';\r\nimport * as apiActions from '../redux/actions/apiActions';\r\n\r\nconst LoginPage = (props) => {\r\n  const [error, setError] = useState(undefined);\r\n\r\n  return (\r\n    <div>\r\n      {error && <Error message={error} />}\r\n      <form action=\"#\" className=\"form login__form\" onSubmit={(e) => onSubmit(e, props, setError)}>\r\n        <div className=\"container\">\r\n          <div className=\"form__group\">\r\n            <label htmlFor=\"username\" className=\"form__label\">\r\n              Username\r\n            </label>\r\n            <input type=\"text\" className=\"form__input\" name=\"username\" placeholder=\"Enter Username\" required />\r\n          </div>\r\n\r\n          <div className=\"form__group\">\r\n            <label htmlFor=\"password\" className=\"form__label\">\r\n              Password\r\n            </label>\r\n            <input type=\"password\"  className=\"form__input\" name=\"password\" placeholder=\"Enter Password\" required />\r\n          </div>\r\n\r\n          <div className=\"form__group\">\r\n            <button type=\"submit\" className=\"btn btn-primary form__btn\">\r\n              Login\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"form__footer\">\r\n            Don't have an account? <Link to=\"/register\">Register</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction onSubmit(e, props, setError) {\r\n  e.preventDefault();\r\n\r\n  const username = e.target.username.value;\r\n  const password = e.target.password.value;\r\n\r\n  e.target.username.value='';\r\n  e.target.password.value='';\r\n\r\n  http\r\n    .post('/auth/login', { username, password })\r\n    .then((res) => {\r\n      if(res.data) {\r\n        props.storeToken(res.data.token);\r\n        props.storeUser(res.data.user);\r\n\r\n        const expiryDays = 1;\r\n        CookieManager.setCookie(\"user\", JSON.stringify(res.data.user), expiryDays);\r\n        CookieManager.setCookie(\"token\", res.data.token, expiryDays);\r\n\r\n        props.history.push('/');\r\n      }else {\r\n        setError(res.error.message);\r\n      }\r\n    })\r\n    .catch((err) => console.log(err));\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { ...state };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    storeToken: (token) => dispatch(apiActions.storeToken(token)),\r\n    storeUser: (user) => dispatch(apiActions.storeUser(user))\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n","import React, { Component } from 'react';\r\nimport http from '../utils/http';\r\nimport Error from './Error';\r\n\r\nclass RegisterPage extends Component {\r\n  state = { error: undefined };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.error && <Error message={this.state.error} />}\r\n        <form action=\"#\" className=\"form login__form\" onSubmit={this.onSubmit}>\r\n          <div className=\"container\">\r\n            <div className=\"form__group\">\r\n              <label htmlFor=\"firstname\" className=\"form__label\">\r\n                First Name\r\n              </label>\r\n              <input type=\"text\" className=\"form__input\" name=\"firstname\" placeholder=\"Enter First Name\" required />\r\n            </div>\r\n\r\n            <div className=\"form__group\">\r\n              <label htmlFor=\"lastname\" className=\"form__label\">\r\n                Last Name\r\n              </label>\r\n              <input type=\"text\" className=\"form__input\" name=\"lastname\" placeholder=\"Enter Last Name\" required />\r\n            </div>            \r\n\r\n            <div className=\"form__group\">\r\n              <label htmlFor=\"username\" className=\"form__label\">\r\n                Username\r\n              </label>\r\n              <input type=\"text\" className=\"form__input\" name=\"username\" placeholder=\"Enter Username\" required />\r\n            </div>\r\n\r\n            <div className=\"form__group\">\r\n              <label htmlFor=\"password\" className=\"form__label\">\r\n                Password\r\n              </label>\r\n              <input type=\"password\" className=\"form__input\" name=\"password\" placeholder=\"Enter Password\" required />\r\n            </div>\r\n\r\n            <div className=\"form__group\">\r\n              <label htmlFor=\"email\" className=\"form__label\">\r\n                Email\r\n              </label>\r\n              <input type=\"email\" className=\"form__input\" name=\"email\" placeholder=\"Enter Email\" required />\r\n            </div>\r\n\r\n            <div className=\"form__group\">\r\n              <button type=\"submit\" className=\"btn btn-primary form__btn\">\r\n                Register\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const firstname = e.target.firstname.value;\r\n    const lastname = e.target.lastname.value;\r\n    const username = e.target.username.value;\r\n    const password = e.target.password.value;\r\n    const email = e.target.email.value;\r\n    \r\n    http\r\n      .post('/auth/register', { firstname, lastname, email, username, password })\r\n      .then((res) => {\r\n        if(res.data) {    \r\n          this.props.history.push('/login');\r\n        }else {\r\n          this.setState(()=>({error:res.error.message}))\r\n        }\r\n      })\r\n      .catch((err) => this.setState(()=>({error:err.message})));\r\n  };\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\n\r\nimport App from './../App';\r\nimport EditTodo from '../components/EditTodo';\r\nimport TodoForm from '../components/TodoForm';\r\nimport LoginPage from '../components/LoginPage';\r\nimport RegisterPage from '../components/RegisterPage';\r\n\r\nconst DefaultPage = () => (\r\n  <div>404 Not Found</div>\r\n);\r\n\r\nconst AppRouter = () => (\r\n  <BrowserRouter basename=\"/leapfrog/todo-app/\">\r\n    <div>\r\n      <Switch>\r\n        <Route path=\"/\" component={App} exact={true} />\r\n        <Route path=\"/login\" component={LoginPage} />\r\n        <Route path=\"/register\" component={RegisterPage} />\r\n        <Route path=\"/add\" component={TodoForm} />\r\n        <Route path=\"/edit\" component={EditTodo} />\r\n        <Route component={DefaultPage} />\r\n      </Switch>\r\n    </div>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default AppRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './styles/style.scss';\nimport store from './redux/store';\nimport AppRouter from './routers/AppRouter';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n    <AppRouter />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}